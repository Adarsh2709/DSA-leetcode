import java.util.Arrays;

class Solution {
    public int countPrimes(int n) {
        if (n <= 2) {
            return 0;
        }

        boolean[] isPrime = new boolean[n];
        Arrays.fill(isPrime, true);
        isPrime[0] = false;
        isPrime[1] = false;

        for (int i = 2; i * i < n; i++) {
            if (isPrime[i]) {
                for (int j = i * i; j < n; j += i) {
                    isPrime[j] = false;
                }
            }
        }

        int count = 0;
        for (int i = 2; i < n; i++) {
            if (isPrime[i]) {
                count++;
            }
        }

        return count;
    }
}


In this method we just mark initially that every element is true but when we find its multiple we simply mark it as false so no need to check then simply rejection make our code more efficient.
Moreover 
We assume all numbers less than n are prime and mark them as true.
Starting from 2, we mark all multiples of each prime as false.
The remaining true values in the array represent prime numbers.